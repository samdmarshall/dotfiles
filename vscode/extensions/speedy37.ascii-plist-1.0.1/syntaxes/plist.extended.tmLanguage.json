{
	"name": "ASCII Property list extended",
	"scopeName": "source.plist.extended",
	"patterns": [
		{
			"include": "#value"
		}
	],
	"repository": {
		"array": {
			"begin": "\\(",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.array.begin.plist.extended"
				}
			},
			"end": "\\)",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.array.end.plist.extended"
				}
			},
			"name": "meta.structure.array.plist.extended",
			"patterns": [
				{
					"include": "#value"
				},
				{
					"match": ",",
					"name": "punctuation.separator.array.plist.extended"
				},
				{
					"match": "[^\\s\\]]",
					"name": "invalid.illegal.expected-array-separator.plist.extended"
				}
			]
		},
		"narray": {
			"begin": "\\[",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.narray.begin.plist.extended"
				}
			},
			"end": "\\]",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.narray.end.plist.extended"
				}
			},
			"name": "meta.structure.narray.plist.extended",
			"patterns": [
				{
					"include": "#natural"
				},
				{
					"match": ",",
					"name": "punctuation.separator.narray.plist.extended"
				},
				{
					"match": "[^\\s\\]]",
					"name": "invalid.illegal.expected-narray-separator.plist.extended"
				}
			]
		},
		"data": {
			"begin": "<",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.data.begin.plist.extended"
				}
			},
			"end": ">",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.data.end.plist.extended"
				}
			},
			"name": "constant.numeric.hex.data.plist.extended",
			"patterns": [
				{
					"match": "[^A-Fa-f0-9 \\t\\n]",
					"name": "invalid.illegal.invalid-character.plist.extended"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"begin": "/\\*\\*(?!/)",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.plist.extended"
						}
					},
					"end": "\\*/",
					"name": "comment.block.documentation.plist.extended"
				},
				{
					"begin": "/\\*",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.plist.extended"
						}
					},
					"end": "\\*/",
					"name": "comment.block.plist.extended"
				},
				{
					"captures": {
						"1": {
							"name": "punctuation.definition.comment.plist.extended"
						}
					},
					"match": "(//).*$\\n?",
					"name": "comment.line.double-slash.js"
				}
			]
		},
		"constant": {
			"match": "\\b(?:YES|NO|yes|no)\\b",
			"name": "constant.language.plist.extended"
		},
		"natural": {
			"match": "[0-9]+",
			"name": "constant.numeric.plist.extended"
		},
		"dictionary": {
			"begin": "\\{",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.dictionary.begin.plist.extended"
				}
			},
			"end": "\\}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.dictionary.end.plist.extended"
				}
			},
			"name": "meta.structure.dictionary.plist.extended",
			"patterns": [
				{
					"include": "#dictionarycontent"
				}
			]
		},
		"object": {
			"begin": "(@[\\w_]+)({)",
			"beginCaptures": {
				"1": {
					"name": "keyword.definition.dictionary.begin.plist.extended"
				},
				"2": {
					"name": "punctuation.definition.dictionary.begin.plist.extended"
				}
			},
			"end": "\\}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.dictionary.end.plist.extended"
				}
			},
			"name": "meta.structure.object.plist.extended",
			"patterns": [
				{
					"include": "#dictionarycontent"
				}
			]
		},
		"dictionarycontent": {
			"patterns": [
				{
					"comment": "the plist object key",
					"include": "#dictionarykey"
				},
				{
					"include": "#comments"
				},
				{
					"begin": "=",
					"beginCaptures": {
						"0": {
							"name": "punctuation.separator.dictionary.key-value.plist.extended"
						}
					},
					"end": ";",
					"endCaptures": {
						"0": {
							"name": "punctuation.separator.dictionary.pair.plist.extended"
						}
					},
					"name": "meta.structure.dictionary.value.plist.extended",
					"patterns": [
						{
							"comment": "the plist object value",
							"include": "#value"
						},
						{
							"match": "[^\\s;]",
							"name": "invalid.illegal.expected-dictionary-separator.plist.extended"
						}
					]
				},
				{
					"match": "[^\\s\\}]",
					"name": "invalid.illegal.expected-dictionary-separator.plist.extended"
				}
			]
		},
		"dictionarykey": {
			"name": "string.plist.extended support.type.property-name.plist.extended",
			"patterns": [
				{
					"include": "#dictionarykeyunquoted"
				},
				{
					"include": "#dictionarykeyquoted"
				}
			]
		},
		"dictionarykeyunquoted": {
			"match": "[A-Za-z0-9-_#.]+",
			"name": "string.unquoted.plist.extended support.type.property-name.plist.extended"
		},
		"dictionarykeyquoted": {
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.support.type.property-name.begin.plist.extended"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.support.type.property-name.end.plist.extended"
				}
			},
			"name": "string.quoted.plist.extended support.type.property-name.plist.extended",
			"patterns": [
				{
					"include": "#stringcontent"
				}
			]
		},
		"stringunquoted": {
			"match": "[A-Za-z0-9-_#.]+",
			"name": "string.unquoted.plist.extended"
		},
		"stringquoted": {
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.plist.extended"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.plist.extended"
				}
			},
			"name": "string.quoted.double.plist.extended",
			"patterns": [
				{
					"include": "#stringcontent"
				}
			]
		},
		"stringcontent": {
			"patterns": [
				{
					"match": "(?x)                # turn on extended mode\n  \\\\                # a literal backslash\n  (?:               # ...followed by...\n    [\"\\\\/bfnrt]     # one of these characters\n    |               # ...or...\n    u               # a u\n    [0-9a-fA-F]{4}) # and four hex digits",
					"name": "constant.character.escape.plist.extended"
				},
				{
					"match": "\\\\.",
					"name": "invalid.illegal.unrecognized-string-escape.plist.extended"
				}
			]
		},
		"value": {
			"patterns": [
				{
					"include": "#constant"
				},
				{
					"include": "#natural"
				},
				{
					"include": "#stringunquoted"
				},
				{
					"include": "#stringquoted"
				},
				{
					"include": "#array"
				},
				{
					"include": "#narray"
				},
				{
					"include": "#data"
				},
				{
					"include": "#dictionary"
				},
				{
					"include": "#object"
				},
				{
					"include": "#comments"
				}
			]
		}
	}
}